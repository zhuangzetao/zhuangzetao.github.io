[{"id":0,"href":"/post/docker/","title":"Docker","section":"Posts","content":" docker安装 # # 1、yum 包更新到最新 yum update\r# 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的 yum install -y yum-utils device-mapper-persistent-data lvm2\r# 3、 设置yum源\ryum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\r# 4、 安装docker，出现输入的界面都按 y yum install -y docker-ce\r# 5、 查看docker版本，验证是否验证成功\rdocker -v 创建容器并使用数据卷挂载文件\n1.容器c1\rdocker run -it --name=c1 -v root/data:/root/data centos:7\r2.容器c2\rdocker run -it --name=c1 -v root/data:/root/data centos:7 查看容器状态\ndocker ps -a 启动容器\ndocker start c1\rdocker start c2 进入到容器\ndocker exec -it c1 /bin/bash\rdocker exec -it c2 /bin/bash 查看容器ip\ndocker inspect --format=\u0026#39;{{.NetworkSettings.IPAddress}}\u0026#39; c1 "},{"id":1,"href":"/post/hugo/","title":"Hugo","section":"Posts","content":" hugo搭建 # 创建网站\nhugo new site fhugo\rcd fhugo\rgit init\r#拉取主题\rgit submodule add https://github.com/tohn/linkshrubbery.git themes/linkshrubbery 添加内容\nhugo new post/first.md 本地启动个人博客\nhugo server -t hugo-book-master --buildDrafts 将个人博客部署到远端服务器\n创建GitHub仓库\ncd /fhugo\rhugo --theme=hugo-book-master --baseUrl=\u0026#34;https://zhuangzetao.github.io/\u0026#34; --buildDrafts\rcd public/\rgit init\rgit add .\r（git remote add origin https://github.com/zhuangzetao/zhuangzetao.github.io.git）\rgit remote set-url origin https://ghp_NL1lA176SkVdA\r0nusKKBNkASS2wItk2eQDR1@github.com/zhuangzetao/zhuangzetao.github.io.git[root@Centos public]# git push -u origin master\rgit commit -m \u0026#34;我的hugo\u0026#34;\rgit push -u origin master 使用Nginx服务器部署\n在生成的public文件下把东西cp到/usr/share/nginx/html linux下配置Git\ngit config --global user.name \u0026#34;zhuangzetao\u0026#34;\rgit config --global user.eamil \u0026#34;513957639@qq.com\u0026#34;\r#获取公钥\rssh-keygen -t rsa -C \u0026#34;513957639@qq.com\u0026#34;\r(一直按回车即可)\rcat ~/.ssh/id_rsa_pub\rssh -T git@ "},{"id":2,"href":"/post/linuxbiji/","title":"Linuxbiji","section":"Posts","content":" Linux笔记 # 1.常用的命令 # ● whereis 查询命令文件的位置\n● file 查看文件的类型\n● who 查看当前在线的用户\n● whoami 我是谁\n● pwd 我在那\n● uname -a 查看内核信息\n● echo 类似于 sout syso ，打印语句\n● clear 清屏\n● history 历史\n2.万事万物皆文件 # ● 文件系统：\n​\t○ 操作系统如何管理文件，内部定义了一些规则或者定义\n● 所以在Linux中所有的东西都是以文件的方式进行操作\n● 在Linux中，文件的访问不和Window的一样。window依靠的是通过盘符进行访问\n● Linux维护着一个树状结构的文件模型\n​\t○ 只有一个根节点 ,他的名字叫做 /\n​\t○ 一个节点上可以有多个子节点\n● 查找文件的方式\n​\t○ 相对路径\n​\t■ 以当前路径为基准点，查找其他资源\n​\t■ vi ../etc/sysconfig/network\n​\t○ 绝对路径\n​\t■ 以根目录为基准点，查找其他资源\n​\t■ vi /etc/sysconfig/network-scripts/ifcfg-ens33\n​\t○ 日常使用中，只要找到路径即可，但是如果是一些配置文件，尽量写绝对路径\n3.Linux的文件操作 # cd\n改变当前工作目录\rls ll\n显示出指定目录下所有的文件\n文件的类型\n-普通文件\nd文件夹\nl软连接\n-rw-r\u0026ndash;r\u0026ndash;. 1 root root 3384 Nov 11 23:51 install.log.syslog\nmkdir\n创建文件目录\nmkdir -p a/b/c/d/e/f 会自动创建文件父目录\nmkdir -p lucky/{1234}ls 一次可以创建多个子目录\nrmdir\n​\t删除空文件夹\nrmdir: failed to remove ‘a1’: Directory not empty rmdir: failed to remove ‘baidu’: Not a directory 可以安全的删除文件目录\ncp\n拷贝文件或者文件目录\ncp 源文件 目标目录\ncp abcd /opt cp /opt/abcd ./ 拷贝文件夹\ncp -r lucky /opt 拷贝文件夹下所有的内容 cp: omitting directory ‘/root/a1’ mv\n移动文件或者文件夹\nmv a1 /opt\nmv abc /opt\n修改文件名称\nmv a abcd rm\n删除文件\nrm install.log\nrm -f install.log\n删除文件夹\nrm -r abcd\nrm -rf abcd 谨慎使用，从删库到跑路\ntouch\n如果没有就创建一个文件\n如果该文件已经存在，修改文件的三个时间，将三个时间改为当前时间\nstat\n查看文件的状态\nInode 当前文件在文件系统的唯一标识，类似于ID\n时间\naccess 访问时间\nmodify 修改文件内容时间\nchange 修改文件元数据信息时间\n文件大小 ，文件所有者 ，文件权限\n对于文件的描述信息\nln\n创建文件的链接\n软(符号)连接\nln -s lucky01 sl\n软连接和原始文件不是同一个文件\nlucky1 131085\nsl 131074\nrm -rf lucky1\n硬链接\nln lucky02 hl\n硬链接和原始文件使用文件系统中的同一个文件\n如果你害怕一个文件被别人误删，你可以使用硬链接保护这个文件\n软硬链接在链接文件的时候，推荐使用文件的绝对路径,否则有可能会出现问题\n4.读取文件信息 # cat\n将整个文档加载到内存中，并进行一次性显示\n除非后面使用管道，传递数据\ntac\n将整个文档加载到内存中，并进行一次性按行逆序显示 more less\n分页查看文档内容\n快捷键\n回车 下一行\n空格 下一页\nb 回退\nq 退出\nhead\n​\t从文章开始读取N行\n默认如果超过10行读取10行,否则读取现在行数\nhead -5 profile\ntail\n从文章末尾读取N行\nhead -3 profile | tail -1\n利用管道只读取第N 行管道的作用就相当于把前面的结果以参数的方式传递给后面的命令 读取新增数据\nping www.baidu.com \u0026raquo;baidu\ntail -F baidu\n如果f:\n它会监听指定inode的文件数据变化，但是当文件被删除后\n即使创新创建，inode也会发生变化，于是监听失败\n如果F\n他会监听指定名字的文件,如果文件被删除后，重新创建\n他会重新监听新文件的数据变化，监听不受影响\nfind\n查找指定的文件\nfind 要查找的范围 -name 名字\nfind /etc -name profile\n5. VI和vim编辑器 # 5.1 打开文件 # 正常打开\nvi profile 打开文件，并将光标置于第8行\nvi +8 profile 打开最后一行\nvi + profile\n按n查找下一个，按N查找上一个\n打开指定搜索单词的位置\nvi +/if profile 5.2 三种模式 # 编辑模式\n编辑模式中，每一个按键都有其他的功能 输入模式\n每一个按键按下什么，就像文本中数据输入什么 末行（命令行）模式\n我们可以直接在VI中输入特定的命令 编辑模式\u0026ndash;\u0026gt;输入模式\ni在当前位置插入数据\na追加数据\no在当前行后面开启一个新的输入行\nI 行首\nA 行尾\nO 上一行\n输入模式\u0026ndash;\u0026gt;编辑模式\n按下ESC 编辑模式\u0026ndash;\u0026gt;末行模式\n: 末行模式\u0026ndash;\u0026gt;编辑模式\n按下ESC 5.3编辑模式 # G最后一行 gg 跳转到第一行 数字gg 跳转到第数字行 w 下个单词 数字w dw 删除一个单词 3dw 删除三个单词 dd 删除一行 3dd 删除三行 u回退到前面的操作 .回退u执行的操作 yw 复制一个单词 3yw 复制三个单词 yy 复制一行 3yy复制三行 p粘贴 6p 粘贴6次 x 剪切 3x 剪切三个字符r 替换，然后输入一个字符替换 3r 替换三个 hjkl 方向键 ZZ 保存并退出 ctrl+s 锁屏 ctrl+q 解锁 5.4 输入模式 # 按啥是啥 5.5 末行模式 # set nu 设置行号\nset nonu 取消行号\nw 保存\nq 退出\nwq 保存并退出\nq!强制退出，但是不保存\n如果上次异常退出会保留同名隐藏文件，每次启动会给与提示\n如果确定当前文件没问题，请删除隐藏文件 /pattern\n搜索指定的字符串\n/usr n向下查找 N逆向查找\ns/p1/p2/g\n替换字符串\ng 替换当前行所有 否则只替换当前行第一个\ns/abc/lucky/g 查找指定行\n3,8s/abc/lucky/g 替换全文\ng/abc/s//lucky/g 6.文件大小 # 分区信息\ndf -h 指定文件目录大小\ndu -h \u0026ndash;max-depth=1 apache-tomcat-7.0.61 swap\n一个特殊分区，以硬盘代替内存 当内存使用满的时候，可以将一部分数据写出到swap分区 7.文件压缩 # 7.1 tar # 主要针对的文件是 lucky.tar.gz\n解压缩\ntar -zx(解压)v(过程)f(文件) lucky.tar.gz 压缩\ntar -zc(压缩)f(文件) tomcat.tar.gz(压缩后的名字) apache-tomcat-7.0.61(源文件)\ntar -zxf tomcat.tar.gz -C /opt/\n-C 指定解压缩的文件目录 7.2 zip 和 unzip # 安装 yum install zip unzip -y 压缩 zip -r tomcat.zip apache-tomcat-7.0.61 解压缩 unzip tomcat.zip 8. 用户-组-权限 # 8.1 用户 # 新增用户\nuseradd luckyboy 会创建同名的组和家目录 设置密码\npasswd luckyboy 删除用户\nuserdel -r luckyboy 级联删除家目录和组 修改用户信息\nusermod -l luckyss luckyls 修改用户名 家目录和组名称是不会被修改的 usermod -L luckyss 锁定用户名 usermod -U luckyss 解锁用户名 常用文件\ncat /etc/shadow 用户名和密码 cat /etc/passwd 用户名，编号,组编号,家目录，命令，目录 6.5系统0-499 普通 500+ 7.6系统0-999 普通 1000+ 切换账户\nsu luckyboy 8.2 组 # 创建组 groupadd lucky 删除组 groupdel lucky 修改组名字 groupmod -n school lucky 查看用户对应的组 groups groups schoolboy 当我们创建用户的时候，会默认创建一个同名的主组 修改用户的组 usermod -g lucky schoolboy (主组) usermod -G lucky schoolls (附属组) 8.3 权限 # 查看文件的权限 drw-r-xr-x 9 n1 m1 4096 Nov 13 00:30 apache-tomcat-7.0.61 三组权限，每组3个字母 r :读取权限 w :写入权限 x :执行权限 -:没有权限 root :所属用户(属主) root：所属的组（属组） 权限的UGO模型 三组权限 属主的权限：属组的权限：其他的权限 所有说：将来修改文件的权限 可以从rwx和ugo两个方面进行修改 修改文件的权限 修改文件所属 chown n1 /var/lucky1 chown n1:m1 /var/lucky2 修改文件夹时，让子目录迭代修改 chown -R n1:m1 school chgrp m2 lucky3 当用户的组被修改之后，需要重新登录才能获取新组的权限 修改文件的rwx chmod o+w lucky4 chmod ug+rw lucky4 chmod ugo-rw lucky4 （权限RWX分别对应数字 4 2 1 5= 4+0+1 r-x） chmod 664 lucky4 -\u0026gt;(rw- rw-r\u0026ndash;) 8.4 权限赋予 # 我们可以将管理用的权限分配给普通用户 文件位置在 vim /etc/sudoers 但是修改这个文件需要使用命令 visudo 修改 Line 99 n1 ALL=(root) /sbin/useradd n1 ALL=(root) /sbin/* 如何使用 su n1 sudo chkconfig iptables off 9 管道与重定向 # 9.1 管道 # 将前面命令的结果作为参数传递给后面的命令 grep 强大的文本搜索工具 cat profile | grep if ls / | grep ^t 9.2 重定向 # 改变数据输出的位置，方向 0 in 1 out 2 err ls / 1\u0026gt; lucky 标准输出 ls / \u0026gt; lucky 标准输出 ls abcd 2\u0026gt;lucky 错误输出 \u0026gt; 替换 \u0026raquo; 追加 ls / 1\u0026raquo; lucky ls / 1\u0026gt; lucky 结合使用 ls /etc /abc \u0026gt; lucky 2\u0026gt;\u0026amp;1 ls /etc /abc \u0026raquo; lucky 2\u0026gt;\u0026amp;1 信息黑洞 ls /etc /abc \u0026raquo; /dev/null 2\u0026gt;\u0026amp;1 "}]